struct ListNode
{
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

class Solution
{
public:
    ListNode* swapPairs(ListNode* head)
    {
        if (head == nullptr || head->next == nullptr)
        {
            return head;
        }

        ListNode* tail = new ListNode(0, head);
        ListNode* temp1 = head->next;
        ListNode* temp2 = head->next->next;
        ListNode* answer = temp1;

        while (true)
        {
            tail->next = temp1;
            temp1->next = head;
            head->next = temp2;

            if (temp2 == nullptr || temp2->next == nullptr)
            {
                break;
            }

            tail = tail->next->next;
            temp1 = temp1->next->next->next;
            temp2 = temp2->next->next;
            head = head->next;
        }

        //O(n/2)

        return answer;
    }
};